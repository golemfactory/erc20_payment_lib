name: Custom_10x_run

on:
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile'
        required: true
        default: 'release-fast'
      transfer_count:
        description: 'Number of transfers to generate'
        required: true
        default: '100000'
      journal_mode:
        description: 'Sqlite journal mode'
        required: true
        default: 'wal'

jobs:
  payment_tests_long:
    name: Payment tests (long)
    timeout-minutes: 300

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        run_no: [00, 01, 02, 03, 04, 05, 06, 07, 08, 09]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "test-cache-${{ github.event.inputs.build_profile }}"

      - name: Build tests (${{ github.event.inputs.build_profile }})
        run: cargo test --profile=${{ github.event.inputs.build_profile }} --test custom_long --no-run

      - name: Run tests (custom_long x ${{ github.event.inputs.transfer_count }})
        run: cargo test --profile=${{ github.event.inputs.build_profile }} --test custom_long -- --test-threads=1
        env:
          ERC20_TESTS_USE_DISK_DB: 1
          ERC20_TESTS_OVERRIDE_DB_NAME: erc20lib.sqlite
          ERC20_LIB_SQLITE_JOURNAL_MODE: ${{ github.event.inputs.journal_mode }}
          TRANSFER_COUNT: ${{ github.event.inputs.transfer_count }}

      - name: Reopen db cleaning wal logs
        run: cargo run --profile=${{ github.event.inputs.build_profile }} -- --sqlite-db-file erc20lib.sqlite --sqlite-journal delete cleanup

      - uses: actions/upload-artifact@v3
        with:
          name: erc20lib_${{ matrix.run_no }}
          path: erc20lib.sqlite