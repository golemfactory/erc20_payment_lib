function y(){return y=Object.assign?Object.assign.bind():function(t){for(var r=1;r<arguments.length;r++){var e=arguments[r];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t},y.apply(this,arguments)}function o(t){return o=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol=="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},o(t)}function m(t,r){if(o(t)!=="object"||t===null)return t;var e=t[Symbol.toPrimitive];if(e!==void 0){var n=e.call(t,r||"default");if(o(n)!=="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return(r==="string"?String:Number)(t)}function p(t){var r=m(t,"string");return o(r)==="symbol"?r:String(r)}function S(t,r,e){return r=p(r),r in t?Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[r]=e,t}function v(t){if(Array.isArray(t))return t}function d(t,r){var e=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(e!=null){var n,a,f,u,l=[],i=!0,c=!1;try{if(f=(e=e.call(t)).next,r===0){if(Object(e)!==e)return;i=!1}else for(;!(i=(n=f.call(e)).done)&&(l.push(n.value),l.length!==r);i=!0);}catch(b){c=!0,a=b}finally{try{if(!i&&e.return!=null&&(u=e.return(),Object(u)!==u))return}finally{if(c)throw a}}return l}}function s(t,r){(r==null||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function g(t,r){if(t){if(typeof t=="string")return s(t,r);var e=Object.prototype.toString.call(t).slice(8,-1);if(e==="Object"&&t.constructor&&(e=t.constructor.name),e==="Map"||e==="Set")return Array.from(t);if(e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return s(t,r)}}function h(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function A(t,r){return v(t)||d(t,r)||g(t,r)||h()}export{S as _,A as a,o as b,y as c};
